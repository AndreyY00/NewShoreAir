// <auto-generated />
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(NewShoreAirContext))]
    [Migration("20230625221026_ImplementandoClasesCodeFirst")]
    partial class ImplementandoClasesCodeFirst
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB.Models.Flight", b =>
                {
                    b.Property<int>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightID"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TransportID")
                        .HasColumnType("int");

                    b.HasKey("FlightID");

                    b.HasIndex("TransportID");

                    b.ToTable("flight", (string)null);
                });

            modelBuilder.Entity("DB.Models.Journey", b =>
                {
                    b.Property<int>("JourneysID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JourneysID"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("JourneysID");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("DB.Models.JourneyFlight", b =>
                {
                    b.Property<int>("JourneyID")
                        .HasColumnType("int");

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.HasKey("JourneyID", "FlightID");

                    b.HasIndex("FlightID");

                    b.ToTable("JourneyFlights");
                });

            modelBuilder.Entity("DB.Models.Transport", b =>
                {
                    b.Property<int>("TransportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportID"));

                    b.Property<string>("FlightCarrier")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TransportID");

                    b.ToTable("transport", (string)null);
                });

            modelBuilder.Entity("DB.Models.Flight", b =>
                {
                    b.HasOne("DB.Models.Transport", "Transport")
                        .WithMany("Flights")
                        .HasForeignKey("TransportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("DB.Models.JourneyFlight", b =>
                {
                    b.HasOne("DB.Models.Flight", "Flight")
                        .WithMany("JourneyFlights")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB.Models.Journey", "Journey")
                        .WithMany("JourneyFlights")
                        .HasForeignKey("JourneyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("DB.Models.Flight", b =>
                {
                    b.Navigation("JourneyFlights");
                });

            modelBuilder.Entity("DB.Models.Journey", b =>
                {
                    b.Navigation("JourneyFlights");
                });

            modelBuilder.Entity("DB.Models.Transport", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
